package common

import (
	"context"
)

// ManagedResourceType represents a managed resource type belonging to a
// provider.
//
// This interface will grow in future versions of this module to support
// new protocol features, so no packages outside of this module should attempt
// to implement it.
type ManagedResourceType interface {
	// Read asks the provider to update a value for this resource that was
	// generated by a previous call to the same provider to reflect any
	// changes that may have occurred to the corresponding remote object.
	Read(context.Context, ManagedResourceReadRequest) (ManagedResourceReadResponse, Diagnostics)

	// Sealed is a do-nothing method that exists only to represent that this
	// interface may not be implemented by any type outside of this module,
	// to allow the interface to expand in future to support new provider
	// plugin protocol features.
	Sealed() Sealed
}

// DataResourceType represents a data resource type (a data source) belonging
// to a provider.
//
// This interface will grow in future versions of this module to support
// new protocol features, so no packages outside of this module should attempt
// to implement it.
type DataResourceType interface {
	// Read asks the current state of the data resource.
	Read(context.Context, DataResourceReadRequest) (DataResourceReadResponse, Diagnostics)

	// Sealed is a do-nothing method that exists only to represent that this
	// interface may not be implemented by any type outside of this module,
	// to allow the interface to expand in future to support new provider
	// plugin protocol features.
	Sealed() Sealed
}
